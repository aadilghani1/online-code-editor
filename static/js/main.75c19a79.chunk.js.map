{"version":3,"sources":["Components/CodeEditor.js","App.js","index.js"],"names":["CodeEditor","fileName","languageToggle","value","onChange","useState","darkMode","setDarkMode","className","xmlns","style","height","width","cursor","viewBox","fill","onClick","fillRule","d","clipRule","onBeforeChange","editor","data","options","lineWrapping","lint","theme","mode","autoScroll","App","htmlVal","setHtmlVal","cssVal","setCssVal","jsVal","setJsVal","htmlToggle","setHtmlToggle","cssToggle","setCssToggle","jsToggle","setJsToggle","iframeDocument","color","srcDoc","title","sandbox","frameBorder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAiEeA,EAvDI,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAIpCC,oBAAS,GAJ2B,mBAI7DC,EAJ6D,KAInDC,EAJmD,KAKpE,OACE,sBAAKC,UAAU,aAAf,UACE,sBAAKA,UAAU,mBAAf,UACGP,EACAK,EACC,qBACEG,MAAM,6BACNC,MAAO,CAAEC,OAAQ,SAAUC,MAAO,SAAUC,OAAQ,WACpDC,QAAQ,YACRC,KAAK,eACLC,QAAS,WACPT,GAAaD,IANjB,SASE,sBACEW,SAAS,UACTC,EAAE,ufACFC,SAAS,cAIb,qBACEV,MAAM,6BACNC,MAAO,CAAEC,OAAQ,SAAUC,MAAO,SAAUC,OAAQ,WACpDC,QAAQ,YACRC,KAAK,eACLC,QAAS,WACPT,GAAaD,IANjB,SASE,sBAAMY,EAAE,2EAId,cAAC,aAAD,CACEE,eAvCqB,SAACC,EAAQC,EAAMnB,GACxCC,EAASD,IAuCLA,MAAOA,EACPK,UAAU,kBACVe,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,MAAOpB,EAAW,WAAa,WAC/BqB,KAAMzB,GAER0B,YAAY,QCiELC,MAxHf,WAAgB,IAAD,EACiBxB,mBAC5B,+GAFW,mBACNyB,EADM,KACGC,EADH,OAIe1B,mBAAS,8CAJxB,mBAIN2B,EAJM,KAIEC,EAJF,OAOa5B,mBAAS,IAPtB,mBAON6B,EAPM,KAOCC,EAPD,OASuB9B,oBAAS,GAThC,mBASN+B,EATM,KASMC,EATN,OAUqBhC,oBAAS,GAV9B,mBAUNiC,EAVM,KAUKC,EAVL,OAWmBlC,oBAAS,GAX5B,mBAWNmC,EAXM,KAWIC,EAXJ,KA+BPC,EAAc,8BAEZZ,EAFY,6BAGXE,EAHW,+BAIVE,EAJU,yBAOpB,OACE,sBAAK1B,UAAU,eAAf,UACE,oBAAIA,UAAU,qBAAd,+EAGA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,iBAAf,2BACA,sBAAKA,UAAU,iBAAf,UACE,wBACEA,UAAU,YACVQ,QApCW,WACrByB,GAAY,GACZF,GAAa,GACbF,GAAc,IAkCJ3B,MACE0B,EACI,CACEO,MAAO,WAET,CAAEA,MAAO,WARjB,wBAaA,wBACEnC,UAAU,YACVQ,QA3CU,WACpByB,GAAY,GACZJ,GAAc,GACdE,GAAa,IAyCH7B,MAAO4B,EAAY,CAAEK,MAAO,WAAc,CAAEA,MAAO,WAHrD,uBAOA,wBACEnC,UAAU,YACVQ,QA5CS,WACnBuB,GAAa,GACbF,GAAc,GACdI,GAAY,IA0CF/B,MAAO8B,EAAW,CAAEG,MAAO,WAAc,CAAEA,MAAO,WAHpD,4BASJ,sBAAKnC,UAAU,kBAAf,UACG4B,EACC,cAAC,EAAD,CACEnC,SAAS,OACTC,eAAe,MACfC,MAAO2B,EACP1B,SAAU2B,IAEV,KAEHO,EACC,cAAC,EAAD,CACEpC,eAAe,MACfD,SAAS,MACTE,MAAO6B,EACP5B,SAAU6B,IAEV,KAEHO,EACC,cAAC,EAAD,CACEtC,eAAe,aACfD,SAAS,KACTE,MAAO+B,EACP9B,SAAU+B,IAEV,QAEN,sBAAK3B,UAAU,kBAAf,UACE,qBAAKA,UAAU,mBAAf,yBACA,wBACEoC,OAAQF,EACRG,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZnC,MAAM,OACND,OAAO,mBC/GnBqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.75c19a79.chunk.js","sourcesContent":["import \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/ayu-dark.css\";\r\nimport \"codemirror/theme/xq-light.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport { Controlled } from \"react-codemirror2\";\r\nimport \"./CodeEditor.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst CodeEditor = ({ fileName, languageToggle, value, onChange }) => {\r\n  const onChangeControlled = (editor, data, value) => {\r\n    onChange(value);\r\n  };\r\n  const [darkMode, setDarkMode] = useState(true);\r\n  return (\r\n    <div className=\"codeEditor\">\r\n      <div className=\"codeEditor--head\">\r\n        {fileName}\r\n        {darkMode ? (\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            style={{ height: \"2.5rem\", width: \"2.5rem\", cursor: \"pointer\" }}\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            onClick={() => {\r\n              setDarkMode(!darkMode);\r\n            }}\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\r\n              clipRule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        ) : (\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            style={{ height: \"2.5rem\", width: \"2.5rem\", cursor: \"pointer\" }}\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            onClick={() => {\r\n              setDarkMode(!darkMode);\r\n            }}\r\n          >\r\n            <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\r\n          </svg>\r\n        )}\r\n      </div>\r\n      <Controlled\r\n        onBeforeChange={onChangeControlled}\r\n        value={value}\r\n        className=\"controlled--Css\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          theme: darkMode ? \"ayu-dark\" : \"xq-light\",\r\n          mode: languageToggle,\r\n        }}\r\n        autoScroll={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport CodeEditor from \"./Components/CodeEditor\";\n\nfunction App() {\n  const [htmlVal, setHtmlVal] = useState(\n    \"<h1>Hello World!</h1> \\n<p>I am a Live Server created with ‚ù§ by Aadil</p>\\n<p>Go ahead and edit me</p>\"\n  );\n  const [cssVal, setCssVal] = useState(`body{\n    background-color: #FFFFFF;\n  }`);\n  const [jsVal, setJsVal] = useState(\"\");\n\n  const [htmlToggle, setHtmlToggle] = useState(true);\n  const [cssToggle, setCssToggle] = useState(false);\n  const [jsToggle, setJsToggle] = useState(false);\n\n  const htmlToggleFunc = () => {\n    setJsToggle(false);\n    setCssToggle(false);\n    setHtmlToggle(true);\n  };\n\n  const cssToggleFunc = () => {\n    setJsToggle(false);\n    setHtmlToggle(false);\n    setCssToggle(true);\n  };\n\n  const jsToggleFunc = () => {\n    setCssToggle(false);\n    setHtmlToggle(false);\n    setJsToggle(true);\n  };\n\n  const iframeDocument = `\n  <html>\n  <body>${htmlVal}</body>\n  <style>${cssVal}</style>\n  <script>${jsVal}</script>\n  </html>`;\n\n  return (\n    <div className=\"mainDocument\">\n      <h1 className=\"mainDocument--Head\">\n        Online Code Editor with hot-reload Live-View by Aadil Abdul Ghani\n      </h1>\n      <div className=\"app\">\n        <div className=\"explorer--Explorer\">\n          <div className=\"explorer--Head\">File Explorer</div>\n          <div className=\"explorer--List\">\n            <button\n              className=\"listClass\"\n              onClick={htmlToggleFunc}\n              style={\n                htmlToggle\n                  ? {\n                      color: \"#00ff4c\",\n                    }\n                  : { color: \"#ffffff\" }\n              }\n            >\n              index.html\n            </button>\n            <button\n              className=\"listClass\"\n              onClick={cssToggleFunc}\n              style={cssToggle ? { color: \"#00ff4c\" } : { color: \"#ffffff\" }}\n            >\n              index.css\n            </button>\n            <button\n              className=\"listClass\"\n              onClick={jsToggleFunc}\n              style={jsToggle ? { color: \"#00ff4c\" } : { color: \"#ffffff\" }}\n            >\n              index.js\n            </button>\n          </div>\n        </div>\n        <div className=\"app--CodeEditor\">\n          {htmlToggle ? (\n            <CodeEditor\n              fileName=\"HTML\"\n              languageToggle=\"xml\"\n              value={htmlVal}\n              onChange={setHtmlVal}\n            />\n          ) : null}\n\n          {cssToggle ? (\n            <CodeEditor\n              languageToggle=\"css\"\n              fileName=\"CSS\"\n              value={cssVal}\n              onChange={setCssVal}\n            />\n          ) : null}\n\n          {jsToggle ? (\n            <CodeEditor\n              languageToggle=\"javascript\"\n              fileName=\"JS\"\n              value={jsVal}\n              onChange={setJsVal}\n            />\n          ) : null}\n        </div>\n        <div className=\"app--LiveServer\">\n          <div className=\"liveServer--Head\">Live Server</div>\n          <iframe\n            srcDoc={iframeDocument}\n            title=\"output\"\n            sandbox=\"allow-scripts\"\n            frameBorder=\"0\"\n            width=\"100%\"\n            height=\"100%\"\n          ></iframe>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}